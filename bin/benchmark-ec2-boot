#!/bin/bash
set -euo pipefail

ami_id=${1?Must provide an AMI ID}
subnet_id="${2?Must provide a subnet id}"
instance_type="${3?Must provide an instance size}"

aws ec2 describe-images \
  --image-ids "${ami_id}"  \
  --query "Images[*].{Name:Name,Description:Description}" \
  --output text

start_time="$(date +%s)"
instance_id=$(aws ec2 run-instances \
  --image-id "${ami_id}" \
  --count 1 \
  --instance-type "${instance_type}" \
  --subnet-id "${subnet_id}" \
  --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=benchmark-test}]' \
  --query "Instances[*].InstanceId" \
  --output text)


cleanup_instance() {
  echo "Terminating instance ${instance_id?}"
  aws ec2 terminate-instances \
    --instance-ids "${instance_id?}" \
    --output text >/dev/null
}

trap cleanup_instance EXIT

echo "Waiting for instance ${instance_id}"
aws ec2 wait instance-running \
  --instance-ids "${instance_id?}"

bootup_time="$(($(date +%s) - $start_time))"
printf "$instance_type boot time: %i seconds\n" "$bootup_time"
